% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slcm.R
\name{slcm}
\alias{slcm}
\title{Construct structural latent class model}
\usage{
slcm(formula = NULL, ..., constraints = NULL)
}
\arguments{
\item{formula}{a formula for specifying latent structure. The details of model specification are given under 'Details'.}

\item{...}{additional formulae of the model.}

\item{constraints}{a list containing constraints for the measurement invariance assumption. The details of posing constraints are given under 'Details'.}
}
\value{
An object of class \code{slcm} with an element \code{model}. \code{model} includes following objects
\item{\code{tree}}{a \code{data.frame} describing whole parent-child relationships among latent class variables and manifest variables in the model}
\item{\code{latent}}{a \code{data.frame} containing descriptions for latent class variable in the model}
\item{\code{measure}}{a \code{data.frame} describing measurement part of the model}
\item{\code{struct}}{a \code{data.frame} describing structural part of the model}

The object prints model description with four part.
\enumerate{
\item Latent variables: This delineates the latent class variables incorporated in the model, along with the number of classes for each variable. The root variable is marked by asterisk (\code{*}).
\item Measurement model: Here, the manifest indicators for each latent class variable are presented. Any measurement constraints are indicated using lowercase alphabets. An identical alphabet signifies a consistent measurement structure.
\item Structural model: This part describes the structural model by specifying the conditional dependency between latent class variables.
\item Dependency constraints: This part suggests the constraints applied to the conditional dependencies between latent class variables. Each column marked with an uppercase alphabet symbolizes a consistent dependency structure.
}
}
\description{
Function for constructing structural latent class model.
}
\details{
The \strong{\code{formula}} can be broadly categorized into three main types, each serving a unique purpose:
\enumerate{
\item \strong{Defining Latent Class Variables with Manifest Indicators}: This is where you specify the relationship between a latent class variable and its manifest indicators. In these formulas, the latent class variable, denoted with square brackets or parentheses indicating the number of classes, is on the left-hand-side (lhs) and its manifest indicators are specified on right-hand-side (rhs). For example,
\preformatted{LC1[k] ~ x1 + x2 + x3
LC2[k] ~ y1 + y2 + y3
LC3(k) ~ z1 + z2 + z3}
Within these formulas, \code{k} denotes an integer reflecting the number of latent classes associated with the latent class variable.
\item \strong{Relating Latent Class Variables to Each Other}: Here, one latent class variable can be associated with or influenced by another latent class variable. The subsequent example implies that \code{LC2} is conditionally affected based on \code{LC1}.
\preformatted{LC1 ~ LC2}
\item \strong{Defining higher-level latent class variable}: Latent class variables can be identified by other latent class variables, instead of manifest indicators. Following example suggests that the \code{P} is measured by \code{LC1}, \code{LC2}, and \code{LC3} -- all of which are latent class variables.
\preformatted{P[k] ~ LC1 + LC2 + LC3}
}

In all types of the formula, variables specified on the left-hand side (lhs) influence those on the right-hand side (rhs).

The \strong{\code{constraints}} option offers a way to impose restrictions on certain probabilities in order to achieve more precise model inference. For instance, in Longitudinal Latent Class Analysis (LTA), it's imperative that latent class variables across various time-points convey identical meanings. With the \code{constraints} option, users can uphold measurement invariance in both the measurement and structural components of the model.
\enumerate{
\item \strong{Measurement Invariance for Measurement Model}: By imposing measurement invariance in the measurement model, the software ensures that the probabilities associated with various latent class variables remain consistent. This consistency allows each latent class within these variables to retain an identical semantic meaning.
\preformatted{c("LC1", "LC2", "LC3")}
This command ensures that variables \code{LC1}, \code{LC2}, and \code{LC3} are semantically consistent, adhering to the measurement invariance assumption.
\item \strong{Measurement invariance for structural model}: In addition to the measurement model, the \code{constraints} option also supports the enforcement of constraints within the structural model, promoting consistent interpretations of transition probabilities.
\preformatted{c("P ~ LC1", "P -> LC2")}
This command implies that the transition probabilities from \code{P} to \code{LC1} and from \code{P} to \code{LC2} are consistent.
}
}
\examples{
# Standard LCA
a <- slcm(smoke[3] ~ y1 + y2 + y3)
# Latent transition analysis
slcm(L1[3] ~ y11 + y21 + y31, L2[3] ~ y12 + y22 + y32,
     L1 ~ L2)
# LTA with measurement assumption
slcm(L1[3] ~ y11 + y21 + y31, L2[3] ~ y12 + y22 + y32,
     L1 ~ L2, constraints = c("L1", "L2"))
# Joint latent class analysis
slcm(LX[3] ~ x1 + x2 + x3, LY[3] ~ y1 + y2 + y3,
     LZ[3] ~ z1 + z2 + z3, JL ~ LX + LY + LZ)
}
